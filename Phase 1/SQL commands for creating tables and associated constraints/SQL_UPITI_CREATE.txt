CREATE TABLE BANKA (
  Id NUMBER(20) NOT NULL,
  Ime VARCHAR2(50) NOT NULL,
  Email VARCHAR2(100) NOT NULL,
  Web_adresa VARCHAR2(100) NOT NULL,
  Adresa_centrale VARCHAR2(50) NOT NULL,
  CONSTRAINT pk_banka PRIMARY KEY (Id),
  CONSTRAINT uk_email UNIQUE (Email),
  CONSTRAINT uk_web_adresa UNIQUE (Web_adresa)
);


CREATE TABLE BR_TEL_BANKE (
  Id_banke NUMBER(20) NOT NULL,
  Broj_telefona VARCHAR2(20) NOT NULL,
  CONSTRAINT uk_broj_telefona UNIQUE (Broj_telefona),
  CONSTRAINT fk_banka_br_tel FOREIGN KEY (Id_banke) REFERENCES BANKA (Id) ON DELETE CASCADE
);


CREATE TABLE FILIJALA (
  Rbr_filijale NUMBER(20) NOT NULL,
  Id_banke NUMBER(20) NOT NULL,
  Adresa VARCHAR2(50) NOT NULL,
  Br_telefona VARCHAR2(20) NOT NULL,
  Radno_vreme VARCHAR2(20) NOT NULL,
  CONSTRAINT pk_filijala PRIMARY KEY (Rbr_filijale),
  CONSTRAINT fk_banka_filijala FOREIGN KEY (Id_banke) REFERENCES BANKA (Id) ON DELETE CASCADE
);


CREATE TABLE BANKOMAT (
  Id NUMBER(20) NOT NULL,
  Rbr_filijale NUMBER(20) NOT NULL,
  Lokacija VARCHAR2(50) NOT NULL,
  Proizvodjac VARCHAR2(50) NOT NULL,
  Status VARCHAR2(12) CHECK (Status IN ('operativan', 'neoperativan')) NOT NULL,
  Datum_poslednjeg_servisa TIMESTAMP NOT NULL,
  CONSTRAINT pk_bankomat PRIMARY KEY (Id),
  CONSTRAINT fk_filijala_bankomat FOREIGN KEY (Rbr_filijale) REFERENCES FILIJALA (Rbr_filijale) ON DELETE CASCADE
);


CREATE TABLE KOM_BANKOMATA (
  Id_bankomata NUMBER(20) NOT NULL,
  Komentar VARCHAR2(255) NOT NULL,
  CONSTRAINT fk_bankomat_komentar FOREIGN KEY (Id_bankomata) REFERENCES BANKOMAT (Id) ON DELETE CASCADE
);


CREATE TABLE KLIJENT (
  Id NUMBER(20) NOT NULL,
  Naziv VARCHAR2(100),
  Adresa VARCHAR2(50) NOT NULL,
  Email VARCHAR2(100) NOT NULL,
  Br_tel VARCHAR2(20) NOT NULL,
  CONSTRAINT pk_klijent PRIMARY KEY (Id),
  CONSTRAINT uk_email_klijent UNIQUE (Email),
  CONSTRAINT uk_br_tel_klijent UNIQUE (Br_tel)
);


CREATE TABLE KOM_KLIJENT (
  Id_klijenta NUMBER(20) NOT NULL,
  Komentar VARCHAR2(255) NOT NULL,
  CONSTRAINT fk_klijent_komentar FOREIGN KEY (Id_klijenta) REFERENCES KLIJENT (Id) ON DELETE CASCADE
);


CREATE TABLE FIZICKO_LICE (
  Id NUMBER(20) NOT NULL,
  Lime VARCHAR2(50) NOT NULL,
  Ime_roditelja VARCHAR2(50) NOT NULL,
  Prezime VARCHAR2(50) NOT NULL,
  JMBG VARCHAR2(13) NOT NULL,
  Br_licne_karte VARCHAR2(9) NOT NULL,
  Mesto_izdavanja VARCHAR2(50) NOT NULL,
  Datum_rodjenja TIMESTAMP NOT NULL,
  CONSTRAINT uk_br_licne_karte UNIQUE (Br_licne_karte),
  CONSTRAINT uk_jmbg UNIQUE (JMBG),
  CONSTRAINT fk_klijent_fizicko_lice FOREIGN KEY (Id) REFERENCES KLIJENT (Id) ON DELETE CASCADE
);

CREATE TABLE PRAVNO_LICE (
  Id NUMBER(20) NOT NULL,
  Poreski_id VARCHAR2(13) NOT NULL,
  CONSTRAINT uk_poreski_id UNIQUE (Poreski_id),
  CONSTRAINT fk_klijent_pravno_lice FOREIGN KEY (Id) REFERENCES KLIJENT (Id) ON DELETE CASCADE
);


CREATE TABLE RACUN (
  Br_racuna NUMBER(20) PRIMARY KEY,
  Id_banke NUMBER(20) NOT NULL,
  Id_klijenta NUMBER(20) NOT NULL,
  Tip VARCHAR2(10) CHECK (Tip IN ('devizni', 'dinarski')) NOT NULL,
  Tekuci_saldo VARCHAR2(20) NOT NULL,
  Datum_otvaranja TIMESTAMP NOT NULL,
  Valuta VARCHAR2(6),
  CONSTRAINT FK_RACUN_BANKE FOREIGN KEY (Id_banke) REFERENCES BANKA(Id) ON DELETE CASCADE,
  CONSTRAINT FK_RACUN_KLIJENT FOREIGN KEY (Id_klijenta) REFERENCES KLIJENT(Id) ON DELETE CASCADE,
  CONSTRAINT CK_DEVIZNI_VALUTA CHECK ((Tip = 'devizni' AND Valuta IS NOT NULL) OR Tip = 'dinarski')
);


CREATE TABLE KARTICA (
  Id NUMBER(20) NOT NULL,
  Br_racuna NUMBER(20) NOT NULL,
  Datum_izdavanja DATE NOT NULL,
  Datum_isteka TIMESTAMP NOT NULL,
  Dnevni_limit VARCHAR2(20) NOT NULL,
  Tip VARCHAR2(10) CHECK (Tip IN ('kreditna', 'debitna')) NOT NULL,
  Max_iznos_zaduzenja VARCHAR2(20),
  Max_datum_vracanja_duga TIMESTAMP,
  CONSTRAINT PK_KARTICA PRIMARY KEY (Id),
  CONSTRAINT FK_KARTICA_RACUN FOREIGN KEY (Br_racuna) REFERENCES RACUN(Br_racuna) ON DELETE CASCADE,
  CONSTRAINT CHK_MAX_KREDITNA CHECK (Tip != 'kreditna' OR (Max_iznos_zaduzenja IS NOT NULL AND Max_datum_vracanja_duga IS NOT NULL))
);


CREATE TABLE SERVIS (
  Kod NUMBER(20) PRIMARY KEY,
  Id_bankomata NUMBER(20) NOT NULL,
  Firma VARCHAR2(50) NOT NULL,
  CONSTRAINT FK_SERVIS_BANKOMAT FOREIGN KEY (Id_bankomata) REFERENCES BANKOMAT(Id) ON DELETE CASCADE
);


CREATE TABLE TRANSAKCIJA (
  Id NUMBER(20) PRIMARY KEY,
  Podignuti_iznos VARCHAR2(20) NOT NULL,
  Datum DATE NOT NULL,
  Vreme TIMESTAMP NOT NULL
);


CREATE TABLE KORISTI_ZA_PODIZANJE_NOVCA (
  Id_bankomata NUMBER(20) NOT NULL,
  Id_kartice NUMBER(20) NOT NULL,
  Id_transakcije NUMBER(20) NOT NULL,
  CONSTRAINT BANKOMAT_ID_CONSTRAINT_KZPN FOREIGN KEY (Id_bankomata) REFERENCES BANKOMAT(Id) ON DELETE CASCADE,
  CONSTRAINT KARTICA_ID_CONSTRAINT_KZPN FOREIGN KEY (Id_kartice) REFERENCES KARTICA(Id) ON DELETE CASCADE,
  CONSTRAINT TRANSAKCIJA_ID_CONSTRAINT_KZPN FOREIGN KEY (Id_transakcije) REFERENCES TRANSAKCIJA(Id) ON DELETE CASCADE
);


CREATE TABLE OTKLONJENE_GRESKE_SERVISA (
  Kod_servisa NUMBER(20) NOT NULL,
  Otklonjena_greska VARCHAR2(255) NOT NULL,
  CONSTRAINT KOM_SERVISA_CONSTRAINT_OGS FOREIGN KEY (Kod_servisa) REFERENCES SERVIS(Kod) ON DELETE CASCADE
);


CREATE TABLE OVLASCENO_LICE_RACUNA (
  Br_racuna NUMBER(20) NOT NULL,
  Ime_ovlascenog_lica VARCHAR2(50) NOT NULL,
  CONSTRAINT RACUN_ID_CONSTRAINT_OLR FOREIGN KEY (Br_racuna) REFERENCES RACUN(Br_racuna) ON DELETE CASCADE
);


CREATE OR REPLACE TRIGGER UPDATE_KLIJENT_NAZIV
AFTER INSERT ON FIZICKO_LICE
FOR EACH ROW
BEGIN
    UPDATE KLIJENT
    SET Naziv = :NEW.Lime || ' ' || :NEW.Prezime
    WHERE Id = :NEW.Id;
END;
